{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring Boot Project\\\\DriveUpload\\\\uploadImageToGoogleDrive-react-java\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultMessage, setResultMessage] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", selectedFile);\n      const response = await fetch(\"http://localhost:5050/uploadToGoogleDrive\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await response.json();\n      setResultMessage({\n        type: \"success\",\n        message: result\n      });\n    } catch (error) {\n      console.error(\"Error uploading image:\", error.message);\n      setResultMessage({\n        type: \"error\",\n        message: error.message\n      });\n    }\n    setTimeout(() => setResultMessage(null), 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [resultMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: resultMessage.message.status == 200 ? `Success: ${resultMessage.message.message}` : `Error: ${resultMessage.message.message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9cxKaGayllxPZyWFQ2GexTUyQh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","resultMessage","setResultMessage","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","result","json","type","message","error","console","setTimeout","className","children","status","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Spring Boot Project/DriveUpload/uploadImageToGoogleDrive-react-java/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultMessage, setResultMessage] = useState(null);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", selectedFile);\n\n      const response = await fetch(\"http://localhost:5050/uploadToGoogleDrive\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const result = await response.json();\n      setResultMessage({ type: \"success\", message: result });\n    } catch (error) {\n      console.error(\"Error uploading image:\", error.message);\n      setResultMessage({ type: \"error\", message: error.message });\n    }\n    setTimeout(() => setResultMessage(null), 5000);\n  };\n\n  return (\n    <div className=\"app\">\n      {resultMessage && (\n        <div>\n          {resultMessage.message.status == 200\n            ? `Success: ${resultMessage.message.message}`\n            : `Error: ${resultMessage.message.message}`}\n        </div>\n      )}\n      <h1>Image Uploader</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={!selectedFile}>\n        Upload Image\n      </button>\n\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,YAAY,CAAC;MAEtC,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCd,gBAAgB,CAAC;QAAEe,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAEH;MAAO,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACD,OAAO,CAAC;MACtDhB,gBAAgB,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEC,KAAK,CAACD;MAAQ,CAAC,CAAC;IAC7D;IACAG,UAAU,CAAC,MAAMnB,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EAChD,CAAC;EAED,oBACEN,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBtB,aAAa,iBACZL,OAAA;MAAA2B,QAAA,EACGtB,aAAa,CAACiB,OAAO,CAACM,MAAM,IAAI,GAAG,GAChC,YAAYvB,aAAa,CAACiB,OAAO,CAACA,OAAO,EAAE,GAC3C,UAAUjB,aAAa,CAACiB,OAAO,CAACA,OAAO;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN,eACDhC,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACY,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE3B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEhC,OAAA;MAAQmC,OAAO,EAAExB,YAAa;MAACyB,QAAQ,EAAE,CAACjC,YAAa;MAAAwB,QAAA,EAAC;IAExD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA5CID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}