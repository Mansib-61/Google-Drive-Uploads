{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring Boot Project\\\\DriveUpload\\\\uploadImageToGoogleDrive-react-java\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultMessage, setResultMessage] = useState(null);\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(null); // To store the image URL\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", selectedFile);\n      const response = await fetch(\"http://localhost:5050/uploadToGoogleDrive\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await response.json();\n\n      // Assuming the server response contains a link to the uploaded image in 'fileUrl'\n      if (response.status === 200) {\n        setUploadedImageUrl(result.fileUrl); // Store the uploaded image URL\n        setResultMessage({\n          type: \"success\",\n          message: result.message\n        });\n      } else {\n        setResultMessage({\n          type: \"error\",\n          message: result.message\n        });\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error.message);\n      setResultMessage({\n        type: \"error\",\n        message: error.message\n      });\n    }\n    setTimeout(() => setResultMessage(null), 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [resultMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: resultMessage.type === \"success\" ? `Success: ${resultMessage.message}` : `Error: ${resultMessage.message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), uploadedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedImageUrl,\n        alt: \"Uploaded\",\n        style: {\n          width: \"300px\",\n          marginTop: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vZSSdfnbATsv9AEW0qK5G/JeYeA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","resultMessage","setResultMessage","uploadedImageUrl","setUploadedImageUrl","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","result","json","status","fileUrl","type","message","error","console","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","src","alt","style","width","marginTop","_c","$RefreshReg$"],"sources":["D:/Spring Boot Project/DriveUpload/uploadImageToGoogleDrive-react-java/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resultMessage, setResultMessage] = useState(null);\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(null); // To store the image URL\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", selectedFile);\n\n      const response = await fetch(\"http://localhost:5050/uploadToGoogleDrive\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const result = await response.json();\n\n      // Assuming the server response contains a link to the uploaded image in 'fileUrl'\n      if (response.status === 200) {\n        setUploadedImageUrl(result.fileUrl); // Store the uploaded image URL\n        setResultMessage({ type: \"success\", message: result.message });\n      } else {\n        setResultMessage({ type: \"error\", message: result.message });\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error.message);\n      setResultMessage({ type: \"error\", message: error.message });\n    }\n\n    setTimeout(() => setResultMessage(null), 5000);\n  };\n\n  return (\n    <div className=\"app\">\n      {resultMessage && (\n        <div>\n          {resultMessage.type === \"success\"\n            ? `Success: ${resultMessage.message}`\n            : `Error: ${resultMessage.message}`}\n        </div>\n      )}\n      <h1>Image Uploader</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={!selectedFile}>\n        Upload Image\n      </button>\n\n      {/* Display uploaded image */}\n      {uploadedImageUrl && (\n        <div>\n          <h2>Uploaded Image:</h2>\n          <img src={uploadedImageUrl} alt=\"Uploaded\" style={{ width: \"300px\", marginTop: \"20px\" }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}